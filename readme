# Laravel Tutorial

## Docker-Umgebung
https://www.digitalocean.com/community/tutorials/how-to-containerize-a-laravel-application-for-development-with-docker-compose-on-ubuntu-18-04-de

## Laracast
https://laracasts.com/series/laravel-6-from-scratch

### Episoode 8
Konsolen-Befehl, um einen neuen Controller anzulegen

    sudo docker exec lara-tutorial_app_1 php artisan make:controller PostsController

Dieser wird dann unter app/Http/Controllers angelegt

### Episoode 9
Alle Variablen in der .env-File können verwendete werden, z.B in der config/database.php

### Episode 10
    sudo docker exec lara-tutorial_app_1 php artisan make:model posts
Erzeugt ein Model für den Datenbank-Zugriff

    sudo docker exec lara-tutorial_app_1 php artisan make:migration create_posts_table
Erzeugt ein Skript zum Anlegen von Datenbank-Elementen

    sudo docker exec lara-tutorial_app_1 php artisan migrate
Führt die Migrations-Skripte aus

### Episode 11
     sudo docker exec lara-tutorial_app_1 php artisan make:model Assignment -mc
Erzeugt ein neues Model und zusätzlich noch eine Migration und einen Controller (-mc)

Das Migrationsskript wird angepaßt und mit 

    sudo docker exec lara-tutorial_app_1 php artisan migrate
wird die Änderung angewandt.

#### Tinker
Tinker ist eine Spielwiese für PHP-Befehle. Alles was man in Skripten ausführt kann man auch mit Tinker ausführen.
in dem Beispiel unten wird beispielsweise ein DB-Eintrag gemacht.

    sudo docker exec -it lara-tutorial_app_1 bash
    www-run@bc6dc00ccfd0:/var/www$ php artisan tinker
    Psy Shell v0.10.4 (PHP 7.4.7 — cli) by Justin Hileman
    >>> $assignment = new App\Assignment;
    => App\Assignment {#3042}
    >>> $assignment->body = 'Finish school work!';
    => "Finish school work!"
    >>> $assignment->save();
    => true

Keine Ahnung, ob man das braucht...!

### Episode 14 - Layout Pages

### Episode 15 - Site Template

### Episode 16 - Set active menu link

### Episode 17 - asset compilation
Laravel hat von Haus aus Preprozessoren an Bord.
Die Config befindet sich in der Datei webpack.mix.js.

    cd www
    // module installieren
    npm install
    // einmalig auslösen
    npm run dev
    // watch starten
    npm run watch

mehr Infos: https://laravel.com/docs/7.x/mix

### Episode 18 - Render Dynamic Data
Es wird zuerst eine Model-File erzeugt, inklusiver einer Migrations-Datei

    sudo docker exec lara-tutorial_app_1 php artisan make:model Article -m

Nachdem man das Migrations-Skript angepaßt hat kann die Migration durchgeführt werden

    sudo docker exec lara-tutorial_app_1 php artisan migrate

Mit Tinker kann man jetzt Daten hinzufügen

    sudo docker exec -it lara-tutorial_app_1 bash
    php artisan tinker
    Psy Shell v0.10.4 (PHP 7.4.7 — cli) by Justin Hileman
    >>> $article = new App\Article;
    => App\Article {#3047}
    >>> $article->title = 'neuer Titel';
    => "neuer Titel"
    >>> $article->excerpt = 'Hier kommt ein kurzer Einleitungstext';
    => "Hier kommt ein kurzer Einleitungstext"
    >>> $article->body = 'Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren';
    => "Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren"
    >>> $article
    => App\Article {#3047
        title: "neuer Titel",
        excerpt: "Hier kommt ein kurzer Einleitungstext",
        body: "Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren",
    }
    >>> $article->save();
    => true

Alternativ kann man es natürlich mit adminer machen....
